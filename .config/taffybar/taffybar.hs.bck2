-- -*- mode:haskell -*-
module Main where

import System.FilePath.Posix
import System.Environment
import System.Directory
import System.Environment
import System.IO
import System.Taffybar
import System.Taffybar.Hooks
import System.Taffybar.SimpleConfig
import System.Taffybar.Widget
import System.Taffybar.Widget.FreedesktopNotifications
import System.Taffybar.Widget.Generic.PollingLabel
import System.Taffybar.Widget.Util
import System.Taffybar.Widget.Workspaces
import System.Log.Logger

import System.Taffybar.Information.X11DesktopInfo

import System.Taffybar.DBus
import System.Taffybar.DBus.Toggle

import Data.Maybe (fromMaybe)
import System.Environment (getArgs)
import System.Process (readProcess)
import Text.Read (readMaybe)

-- import Paths_taffybar_ben ( getDataDir )

fgcolor :: String -> String -> String
fgcolor color contents =
  "<span fgcolor='" ++ color ++ "'>" ++ contents ++ "</span>"

main :: IO ()
main = do
  --cssPath <- (</> "taffybar.css") <$> getDataDir
  let cssPath = "/home/gladwin/.config/taffybar/taffybar.css"
  print cssPath
  let myWorkspacesConfig =
        defaultWorkspacesConfig
        { minIcons = 0
        , maxIcons = Just 0
        , widgetGap = 5
        , showWorkspaceFn = hideEmpty
        , getWindowIconPixbuf = \_ _ -> return Nothing
        , updateEvents =
          [ "_NET_CURRENT_DESKTOP"
          , "_NET_NUMBER_OF_DESKTOPS"
          , "_NET_DESKTOP_NAMES"
          , "_NET_NUMBER_OF_DESKTOPS"
          ]
        , updateRateLimitMicroseconds = 200000
        }
      workspaces = workspacesNew myWorkspacesConfig
      clock = textClockNew Nothing (fgcolor "orange" "%a %b %_d %H:%M") 1
      layout = layoutNew defaultLayoutConfig
      windows = windowsNew defaultWindowsConfig
          -- See https://github.com/taffybar/gtk-sni-tray#statusnotifierwatcher
          -- for a better way to set up the sni tray
      tray = sniTrayNew
      myConfig = defaultSimpleTaffyConfig
        { startWidgets =
            workspaces :
            map (>>= buildContentsBox) [ windows ]
        , endWidgets = map (>>= buildContentsBox)
          [ clock
          , tray
          , mpris2New
          , layout
          ]
        , barPosition = Top
        , barPadding = 0
        , barHeight = ExactSize 18
        , widgetSpacing = 5
        , cssPaths = [cssPath]
        }
  --dyreTaffybar $ withBatteryRefresh $ withLogServer $ withToggleServer $
  --             toTaffyConfig myConfig

  logger <- getLogger "System.Taffybar"
  saveGlobalLogger $ setLevel INFO logger

  startTaffybar $ withBatteryRefresh $ withLogServer $ withToggleServer $ toTaffyConfig myConfig

-- https://hackage.haskell.org/package/taffybar-4.0.0/docs/System-Taffybar.html
-- https://hackage.haskell.org/package/taffybar-4.0.0/docs/
-- https://github.com/bgamari/xmonad-config/blob/master/taffybar-ben/taffybar.hs
